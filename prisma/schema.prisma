// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  kindleUserId String @unique
  name String
  imageUrl String @db.String
  email String @db.String

  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "strie_current_period_end")

  files File[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UploadStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

model File {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  uploadStatus UploadStatus @default(PENDING)

  key String
  url String

  ownerId String
  owner Profile @relation(fields: [ownerId], references: [kindleUserId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}